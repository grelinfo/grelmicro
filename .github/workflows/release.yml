name: Release
on:
  release:
    types:
      - published
  workflow_dispatch:
    inputs:
      version:
        type: string
        description: 'The version to manually release'
        required: true
      dry_run:
        type: boolean
        description: 'Dry run the release process'
        default: false
permissions: {}
jobs:
  publish-docs:
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pages: write
      id-token: write
    env:
      UV_FROZEN: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.version }}
      - name: Configure Git User
        run: |
          git config user.name "${{ github.actor }}"
          git config user.email "${{ github.actor_id }}+${{ github.actor }}@users.noreply.github.com"
      - name: Install uv and Activate Environment
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
          activate-environment: true
      - name: Install Docs Dependencies
        run: uv sync --group docs
      - name: Build Docs
        run: mkdocs build
      - name: Deploy Docs on GitHub Pages
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: mkdocs gh-deploy --force
  publish-pypi:
    runs-on: ubuntu-latest
    permissions:
      contents: read
      packages: write
    env:
      UV_FROZEN: 1
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          ref: ${{ github.event.release.tag_name || github.event.inputs.version }}
      - name: Install uv
        uses: astral-sh/setup-uv@v6
        with:
          enable-cache: true
      - name: Set Package Version
        run: uv version ${{ github.event.release.tag_name || github.event.inputs.version }}
      - name: Build Package
        run: uv build
      - name: Publish Package to PyPI
        if: ${{ github.event.inputs.dry_run != 'true' }}
        run: uv publish -t ${{ secrets.PYPI_TOKEN }}
